name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'global' || 'dev' }}
    steps:
      - uses: actions/checkout@v4
      - name: Create .env file
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "BOT_TOKEN=${{ vars.BOT_TOKEN }}" >> .env
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "BOT_TOKEN=${{ vars.BOT_TOKEN_DEV }}" >> .env
          fi
          
          echo "DB_HOST=${{ vars.DB_HOST }}" >> .env
          echo "DB_PORT=${{ vars.DB_PORT }}" >> .env
          echo "DB_NAME=${{ vars.DB_NAME }}" >> .env
          echo "DB_USER=${{ vars.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ vars.DB_PASSWORD }}" >> .env

          echo "FIREWORKS_API_KEY=${{ vars.FIREWORKS_API_KEY }}" >> .env
          echo "OPENAI_API_KEY=${{ vars.OPENAI_API_KEY }}" >> .env

          echo "TYPE=${{ vars.TYPE }}" >> .env
          echo "PROJECT_ID=${{ vars.PROJECT_ID }}" >> .env
          echo "PRIVATE_KEY_ID=${{ vars.PRIVATE_KEY_ID }}" >> .env
          echo "PRIVATE_KEY=${{ vars.PRIVATE_KEY }}" >> .env
          echo "CLIENT_EMAIL=${{ vars.CLIENT_EMAIL }}" >> .env
          echo "CLIENT_ID=${{ vars.CLIENT_ID }}" >> .env
          echo "TOKEN_URI=${{ vars.TOKEN_URI }}" >> .env
          echo "AUTH_URI=${{ vars.AUTH_URI }}" >> .env
          echo "AUTH_PROVIDER_X509_CERT_URL=${{ vars.AUTH_PROVIDER_X509_CERT_URL }}" >> .env
          echo "CLIENT_X509_CERT_URL=${{ vars.CLIENT_X509_CERT_URL }}" >> .env
          
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ vars.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.PROJECT_NAME }}:${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}

      - name: Log out from DockerHub
        run: docker logout

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'global' || 'dev' }}
    steps:
      - name: logging
        run: |
          echo ${{ vars.SERVER_HOST }}
      - name: SSH into server and pull image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USER }}
          password: ${{ vars.SSH_PASSWORD }}
          script: |
            image_tag=${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}
            current_container=$(docker ps --filter "ancestor=${{ vars.DOCKERHUB_USERNAME }}/${{ vars.PROJECT_NAME }}:$image_tag" --format "{{.Names}}")
            if [ -n "$current_container" ]; then
              docker stop $current_container
              docker rm $current_container
            fi
            docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.PROJECT_NAME }}:$image_tag
            docker stop current_container || true
            docker rm current_container || true
            docker images -a | grep none | awk '{ print $3; }' | xargs docker rmi --force
            docker run -d --name current_container -p ${{ vars.HOST_PORT }}:${{ vars.HOST_PORT }} ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.PROJECT_NAME }}:$image_tag
